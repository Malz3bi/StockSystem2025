@model StockSystem2025.Models.ManageCompaniesViewModel

@{
    ViewData["Title"] = "إدارة القطاعات والشركات";
}

<div class="page-wrapper">
    <div class="container mt-4">
        <h2 class="mb-4 text-secondary border-bottom pb-2">@ViewData["Title"]</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }

        <form asp-action="ManageCompanies" method="get" class="mb-3">
            <div class="row">
                <label class="col-sm-2 col-form-label">اختر القطاع</label>
                <div class="col-sm-10">
                    <select name="indicatorCode" class="form-control w-50" onchange="this.form.submit()">
                        @foreach (var indicator in ViewBag.Indicators as List<StockSystem2025.Models.CompanyTable>)
                        {
                            <option value="@indicator.CompanyCode" selected="@(indicator.CompanyCode == Model.IndicatorCode)">@indicator.CompanyName</option>
                        }
                    </select>
                </div>
            </div>
        </form>

        <form asp-action="SaveCompanies" method="post" id="manageCompaniesForm">
            <input type="hidden" asp-for="IndicatorId" />
            <input type="hidden" asp-for="IndicatorCode" />
            <input type="hidden" asp-for="IndicatorName" />
            <input type="hidden" id="selectedExistingCompanies" name="SelectedExistingCompanies" value="" />
            <input type="hidden" id="selectedRemainingCompanies" name="SelectedRemainingCompanies" value="" />

            <div class="row">
                <div class="col-md-6">
                    <h5>الشركات التابعة لـ @Model.IndicatorName</h5>
                    <div class="dropzone existing-companies" ondragover="allowDrop(event)" ondrop="drop(event)">
                        @foreach (var company in Model.ExistingCompanies)
                        {
                            <div class="company-item" draggable="true" data-code="@company.CompanyCode" ondragstart="drag(event)">@company.CompanyName</div>
                        }
                    </div>
                </div>
                <div class="col-md-6">
                    <h5>باقي الشركات</h5>
                    <div class="dropzone remaining-companies" ondragover="allowDrop(event)" ondrop="drop(event)">
                        @foreach (var company in Model.RemainingCompanies)
                        {
                            <div class="company-item" draggable="true" data-code="@company.CompanyCode" ondragstart="drag(event)">@company.CompanyName</div>
                        }
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary mt-3">حفظ</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let existingCompanies = new Set();
        let remainingCompanies = new Set();

        // Initialize sets with current data
        @foreach (var company in Model.ExistingCompanies)
        {
            @:existingCompanies.add("@company.CompanyCode");
        }
        @foreach (var company in Model.RemainingCompanies)
        {
            @:remainingCompanies.add("@company.CompanyCode");
        }

        function allowDrop(event) {
            event.preventDefault();
        }

        function drag(event) {
            event.dataTransfer.setData("text", event.target.getAttribute("data-code"));
        }

        function drop(event) {
            event.preventDefault();
            const companyCode = event.dataTransfer.getData("text");
            const targetZone = event.target.closest(".dropzone").classList.contains("existing-companies") ? "existing" : "remaining";
            const item = document.querySelector(`[data-code="${companyCode}"]`);

            if (targetZone === "existing" && !existingCompanies.has(companyCode)) {
                existingCompanies.add(companyCode);
                remainingCompanies.delete(companyCode);
                event.target.closest(".dropzone").appendChild(item);
            } else if (targetZone === "remaining" && !remainingCompanies.has(companyCode)) {
                remainingCompanies.add(companyCode);
                existingCompanies.delete(companyCode);
                event.target.closest(".dropzone").appendChild(item);
            }

            // Update hidden inputs before submit
            document.getElementById("selectedExistingCompanies").value = Array.from(existingCompanies);
            document.getElementById("selectedRemainingCompanies").value = Array.from(remainingCompanies);
        }

        // Update hidden inputs on form submit
        document.getElementById("manageCompaniesForm").addEventListener("submit", function() {
            document.getElementById("selectedExistingCompanies").value = Array.from(existingCompanies);
            document.getElementById("selectedRemainingCompanies").value = Array.from(remainingCompanies);
        });
    </script>
    <style>
        .company-item {
            padding: 10px;
            margin: 5px;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            cursor: move;
            border-radius: 4px;
        }

        .dropzone {
            min-height: 400px;
            border: 2px dashed #ccc;
            padding: 10px;
            background-color: #fff;
        }
    </style>
}