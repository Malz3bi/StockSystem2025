@model StockSystem2025.ViewModel.RecommendationResultViewModel
@{
    ViewData["Title"] = "عرض نتائج التوصيات";
}

<style>
    .grid {
        width: 100%;
        border-collapse: collapse;
    }

    .stats {
        margin: 10px 0;
    }

        .stats th, .stats td {
            padding: 8px;
            text-align: center;
        }

    .up {
        color: green;
    }

    .down {
        color: red;
    }

    .elhr-b {
        border-bottom: 2px solid #dee2e6;
        margin: 10px 0;
    }

    .loading {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 1000;
        display: none;
    }

    .loading-center {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        color: white;
    }

    .tooltip:hover::after {
        content: attr(title);
        position: absolute;
        background: #333;
        color: #fff;
        padding: 5px;
        border-radius: 3px;
        z-index: 100;
    }

    .indicator-row {
        font-weight: bold;
    }

    .special-row {
        background-color: @(Model.SpecialCompanyColor ?? "#f0f0f0");
    }

    body {
        direction: rtl;
    }
</style>

<div class="page-wrapper">
    <div class="content">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    <!-- جدول المؤشرات العامة -->
    <table class="table table-bordered grid">
        <thead class="table-light">
            <tr>
                <th>رمز الشركة</th>
                <th>اسم الشركة</th>
                <th>الإفتتاح</th>
                <th>الأعلى</th>
                <th>الأدنى</th>
                <th>الإغلاق</th>
                <th>قيمة التغيير</th>
                <th>نسبة التغيير</th>
                <th>كمية التداول</th>
                <th>إيجابي</th>
                <th>سلبي</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.GeneralIndicators != null && Model.GeneralIndicators.Any())
            {
                @foreach (var item in Model.GeneralIndicators)
                {
                    <tr>
                        <td><a href="/Companies/Details?code=@item.Sticker">@item.Sticker</a></td>
                        <td><a href="/Companies/Details?code=@item.Sticker">@item.Sname</a></td>
                        <td>@item.Sopen.ToString("F2")</td>
                        <td>@item.Shigh.ToString("F2")</td>
                        <td>@item.Slow.ToString("F2")</td>
                        <td>@item.Sclose.ToString("F2")</td>
                        <td class="@(item.ChangeValue > 0 ? "up" : item.ChangeValue < 0 ? "down" : "")">@item.ChangeValue.ToString("F2")</td>
                        <td class="@(item.ChangeRate > 0 ? "up" : item.ChangeRate < 0 ? "down" : "")">@item.ChangeRate.ToString("F2")%</td>
                        <td>@item.Svol.ToString("N0")</td>
                        <td>@item.IndicatorIn.ToString("F2")</td>
                        <td>@item.IndicatorOut.ToString("F2")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="11" class="text-center">لا توجد بيانات متاحة</td>
                </tr>
            }
        </tbody>
    </table>

    <hr class="elhr-b" />

    <!-- إحصائيات القطاعات والشركات -->
    <div class="stats-div">
        <table class="stats table table-bordered">
            <tr>
                <th rowspan="2">القطاعات</th>
                <th class="up">صاعدة</th>
                <th class="down">هابطة</th>
                <th>بدون تغيير</th>
            </tr>
            <tr>
                <td class="up">@Model.IndicatorsUpCount</td>
                <td class="down">@Model.IndicatorsDownCount</td>
                <td>@Model.IndicatorsNoChangeCount</td>
            </tr>
        </table>

        <div class="stats mb-3">
            <b>نتائج توصيات يوم:</b>
            <div class="input-group w-auto d-inline-flex">
                <input type="text" id="criteriaStartDate" class="form-control" style="width: 150px;"
                       value="@Model.SelectedDate.ToString("yyyy-MM-dd")" readonly />
                <button id="criteriaNextDate" class="btn btn-outline-secondary" title="التاريخ التالي">▲</button>
                <button id="criteriaPrevDate" class="btn btn-outline-secondary" title="التاريخ السابق">▼</button>
            </div>
            <span id="wrongDateMessage" class="text-danger d-none">يرجى إدخال تاريخ صحيح</span>
        </div>

        <table class="stats table table-bordered">
            <tr>
                <th rowspan="2">الشركات</th>
                <th class="up">صاعدة</th>
                <th class="down">هابطة</th>
                <th>بدون تغيير</th>
            </tr>
            <tr>
                <td class="up">@Model.CompaniesUpCount</td>
                <td class="down">@Model.CompaniesDownCount</td>
                <td>@Model.CompaniesNoChangeCount</td>
            </tr>
        </table>
    </div>

    <hr class="elhr-b" />

    <!-- تفاصيل المعيار -->
    <table class="table table-bordered grid" style="width: 90%; margin: 0 auto;">
        <thead class="table-light">
            <tr>
                <th>رقم التسلسل</th>
                <th>الفاصل</th>
                <th>اسم المعيار</th>
                <th>نوع المعيار</th>
                <th>ملاحظات</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.CriteriaIndex</td>
                <td>@(Model.CriteriaSeparater ?? "-")</td>
                <td>@(Model.CriteriaName ?? "غير متوفر")</td>
                <td>@(Model.CriteriaType ?? "غير متوفر")</td>
                <td>@(Model.CriteriaNote ?? "لا توجد ملاحظات")</td>
            </tr>
        </tbody>
    </table>

    <!-- زر التبديل بين العروض -->
    <div class="mb-3">
        <button id="switchViewButton" class="btn btn-primary">@(Model.IsSecondView ? "عرض التوصيات" : "عرض الدعوم والأهداف")</button>
    </div>

    <!-- جدول التوصيات -->
    <table id="recommendationsTable" class="table table-bordered grid">
        <thead class="table-light">
            <tr>
                <th>م</th>
                <th>رمز</th>
                <th>اسم الشركة</th>
                <th>سعر التوصية</th>
                @if (Model.IsSecondView)
                {
                    <th>وقف الخسارة (@Model.StopLossValue%)</th>
                    <th>الدعم الثاني (@Model.SecondSupportValue%)</th>
                    <th>الدعم الأول (@Model.FirstSupportValue%)</th>
                    <th>الهدف الأول (@Model.FirstTargetValue%)</th>
                    <th>الهدف الثاني (@Model.SecondTargetValue%)</th>
                    <th>الهدف الثالث (@Model.ThirdTargetValue%)</th>
                    <th>السعر الحالي</th>
                    <th>القيمة اليومية</th>
                    <th>النسبة اليومية</th>
                    <th>القيمة الأسبوعية</th>
                    <th>النسبة الأسبوعية</th>
                }
                else
                {
                    <th>الإفتتاح المتوقع</th>
                    <th>القيمة</th>
                    <th>النسبة</th>
                    <th>الإفتتاح</th>
                    <th>القيمة</th>
                    <th>النسبة</th>
                    <th>الأعلى</th>
                    <th>القيمة</th>
                    <th>النسبة</th>
                    <th>الأدنى</th>
                    <th>القيمة</th>
                    <th>النسبة</th>
                    <th>الإغلاق</th>
                    <th>القيمة</th>
                    <th>النسبة</th>
                }
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <!-- قائمة السياق -->
    <ul id="contextMenu" class="dropdown-menu">
        <li class="dropdown-item disabled">إضافة إلى قائمة المتابعة</li>
        @if (Model.FollowLists != null && Model.FollowLists.Any())
        {
            @foreach (var followList in Model.FollowLists)
            {
                <li>
                    <a class="dropdown-item" href="#" data-follow-id="@followList.Id"
                       style="background-color: @(string.IsNullOrEmpty(followList.Color) ? "#FFFFFF75" : followList.Color.Length > 3 ? followList.Color.Substring(1) + "75" : "#FFFFFF75")">
                        @followList.Name
                    </a>
                </li>
            }
        }
        else
        {
            <li><a class="dropdown-item disabled" href="#">لا توجد قوائم متابعة</a></li>
        }
    </ul>

    <!-- تحميل -->
    <div class="loading">
        <div class="loading-center">
            <img src="https://i.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif" width="48" height="48" /><br />
            الرجاء الانتظار... جاري تحميل البيانات
        </div>
    </div>
</div>
</div>

@section Scripts {
    <!-- Include Toastr.js if not in layout -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        $(document).ready(function () {
        

            let isSecondView = @Json.Serialize(Model.IsSecondView);
            let criteriaId = @Model.CriteriaId;
            let selectedDate = '@Model.SelectedDate.ToString("yyyy-MM-dd")';
            let table = null;

            // تهيئة Toastr
            toastr.options = {
                positionClass: 'toast-top-right',
                closeButton: true,
                timeOut: 3000,
                preventDuplicates: true
            };

            // تهيئة Datetimepicker
            $('#criteriaStartDate').datetimepicker({
                format: 'YYYY-MM-DD',
                locale: 'ar',
                useCurrent: false,
                minDate: '@(Model.MinDate?.ToString("yyyy-MM-dd") ?? "")',
                maxDate: '@(Model.MaxDate?.ToString("yyyy-MM-dd") ?? "")'
            }).on('dp.change', function (e) {
                selectedDate = e.date.format('YYYY-MM-DD');
                checkDateAndReload();
            });

            // تهيئة DataTables
                   function initDataTable() {
            try {
                table = $('#recommendationsTable').DataTable({
                    ajax: {
                        url: '/RecommendationResult/GetRecommendations',
                        type: 'GET',
                        data: function (d) {
                            d.criteriaId = criteriaId;
                            d.selectedDate = selectedDate;
                            d.isSecondView = isSecondView;
                        },
                        dataSrc: function (json) {
                            if (!json.data) {
                                toastr.error('فشل تحميل البيانات');
                                return [];
                            }
                            return json.data;
                        },
                        error: function (xhr, error, thrown) {
                            toastr.error('حدث خطأ أثناء تحميل التوصيات: ' + xhr.statusText);
                            console.error('AJAX Error:', xhr.status, error, thrown);
                        },
                        beforeSend: function () {
                            $('.loading').show();
                        },
                        complete: function () {
                            $('.loading').hide();
                        }
                    },
                    columns: [
                        { data: null, render: function (data, type, row, meta) { return meta.row + 1; } },
                        {
                            data: 'sticker', // Lowercase
                            render: function (data) {
                                return data ? `<a href="/Companies/Details?code=${encodeURIComponent(data)}">${data}</a>` : '-';
                            }
                        },
                        {
                            data: 'sname', // Lowercase
                            render: function (data, type, row) {
                                return row.followlistnames ? `<span class="tooltip" title="${row.followlistnames}">${data || '-'}</span>` : (data || '-');
                            }
                        },
                        { data: 'sclose', render: function (data) { return data || '0.00'; } }, // Lowercase
                        ...(isSecondView ? [
                            { data: 'stoploss', render: function (data) { return data || '0.00'; } },
                            { data: 'secondsupport', render: function (data) { return data || '0.00'; } },
                            { data: 'firstsupport', render: function (data) { return data || '0.00'; } },
                            { data: 'firsttarget', render: function (data) { return data || '0.00'; } },
                            { data: 'secondtarget', render: function (data) { return data || '0.00'; } },
                            { data: 'thirdtarget', render: function (data) { return data || '0.00'; } },
                            { data: 'currentprice', render: function (data) { return data || '0.00'; } },
                            { data: 'dailytargetvalue', render: function (data) { return data || '0.00'; } },
                            { data: 'dailytargetpercent', render: function (data) { return data || '0.00%'; } },
                            { data: 'weeklytargetvalue', render: function (data) { return data || '0.00'; } },
                            { data: 'weeklytargetpercent', render: function (data) { return data || '0.00%'; } }
                        ] : [
                            { data: 'expectedopen', render: function (data) { return data || '0.00'; } },
                            { data: 'expectedopenvalue', render: function (data) { return data || '0.00'; } },
                            { data: 'expectedopenpercent', render: function (data) { return data || '0.00%'; } },
                            { data: 'prevsopen', render: function (data) { return data || '0.00'; } },
                            { data: 'openinggapvalue', render: function (data) { return data || '0.00'; } },
                            { data: 'openinggaprate', render: function (data) { return data || '0.00%'; } },
                            { data: 'prevshigh', render: function (data) { return data || '0.00'; } },
                            { data: 'upperlimitvalue', render: function (data) { return data || '0.00'; } },
                            { data: 'upperlimitrate', render: function (data) { return data || '0.00%'; } },
                            { data: 'prevslow', render: function (data) { return data || '0.00'; } },
                            { data: 'lowerlimitvalue', render: function (data) { return data || '0.00'; } },
                            { data: 'lowerlimitrate', render: function (data) { return data || '0.00%'; } },
                            { data: 'prevsclose', render: function (data) { return data || '0.00'; } },
                            { data: 'changevalue', render: function (data) { return data || '0.00'; } },
                            { data: 'changerate', render: function (data) { return data || '0.00%'; } }
                        ])
                    ],
                    rowCallback: function (row, data) {
                        try {
                            if (data.isindicator) $(row).addClass('indicator-row'); // Lowercase
                            if (data.isspecial) $(row).addClass('special-row'); // Lowercase
                            if (data.followlistcolor && data.followlistcolor.length > 3) { // Lowercase
                                $(row).find('td:first').css('background-color', '#' + data.followlistcolor.substring(1) + '75');
                            }
                        } catch (e) {
                            console.error('Error in rowCallback:', e);
                        }
                    },
                    language: {
                        url: '//cdn.datatables.net/plug-ins/2.0.8/i18n/ar.json'
                    },
                    order: [[1, 'asc']],
                    pageLength: 10,
                    responsive: true
                });
            } catch (e) {
                toastr.error('فشل تهيئة جدول التوصيات');
                console.error('DataTable Initialization Error:', e);
            }
        }

            initDataTable();

            // قائمة السياق
            $('#recommendationsTable tbody').on('contextmenu', 'tr', function (e) {
                e.preventDefault();
                try {
                    let sticker = $(this).find('td:eq(1) a').text();
                    if (!sticker) {
                        toastr.warning('رمز الشركة غير متاح');
                        return;
                    }
                    $('#contextMenu').css({
                        top: e.pageY,
                        left: e.pageX,
                        display: 'block'
                    });
                    $('#contextMenu a').off('click').on('click', function (e) {
                        e.preventDefault();
                        let followId = $(this).data('follow-id');
                        if (followId) {
                            $.ajax({
                                url: '/RecommendationResult/AddToFollowList',
                                method: 'POST',
                                data: { followListId: followId, companyCode: sticker },
                                success: function (response) {
                                    if (response.success) {
                                        toastr.success('تمت إضافة الشركة بنجاح');
                                        table.ajax.reload();
                                    } else {
                                        toastr.error(response.message || 'فشل إضافة الشركة');
                                    }
                                },
                                error: function (xhr) {
                                    toastr.error('حدث خطأ أثناء إضافة الشركة: ' + (xhr.statusText || 'غير معروف'));
                                    console.error('AddToFollowList Error:', xhr);
                                }
                            });
                        }
                        $('#contextMenu').hide();
                    });
                } catch (e) {
                    toastr.error('حدث خطأ أثناء فتح قائمة السياق');
                    console.error('Context Menu Error:', e);
                }
            });

            $(document).on('click', function (e) {
                if (!$(e.target).closest('#contextMenu').length) {
                    $('#contextMenu').hide();
                }
            });

            // التبديل بين العروض
            $('#switchViewButton').on('click', function () {
                try {
                    isSecondView = !isSecondView;
                    $(this).text(isSecondView ? 'عرض التوصيات' : 'عرض الدعوم والأهداف');
                    table.destroy();
                    initDataTable();
                } catch (e) {
                    toastr.error('فشل التبديل بين العروض');
                    console.error('Switch View Error:', e);
                }
            });

            // التاريخ التالي/السابق
            $('#criteriaNextDate').on('click', function () {
                $.ajax({
                    url: '/RecommendationResult/GetNextDate',
                    data: { currentDate: selectedDate },
                    success: function (response) {
                        if (response.success && response.date) {
                            selectedDate = response.date;
                            $('#criteriaStartDate').datetimepicker('date', moment(selectedDate, 'YYYY-MM-DD'));
                            checkDateAndReload();
                        } else {
                            toastr.error(response.message || 'لا يوجد تاريخ لاحق');
                            $('#wrongDateMessage').removeClass('d-none');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('حدث خطأ أثناء جلب التاريخ التالي');
                        console.error('GetNextDate Error:', xhr);
                    }
                });
            });

            $('#criteriaPrevDate').on('click', function () {
                $.ajax({
                    url: '/RecommendationResult/GetPreviousDate',
                    data: { currentDate: selectedDate },
                    success: function (response) {
                        if (response.success && response.date) {
                            selectedDate = response.date;
                            $('#criteriaStartDate').datetimepicker('date', moment(selectedDate, 'YYYY-MM-DD'));
                            checkDateAndReload();
                        } else {
                            toastr.error(response.message || 'لا يوجد تاريخ سابق');
                            $('#wrongDateMessage').removeClass('d-none');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('حدث خطأ أثناء جلب التاريخ السابق');
                        console.error('GetPreviousDate Error:', xhr);
                    }
                });
            });

            function checkDateAndReload() {
                $.ajax({
                    url: '/RecommendationResult/CheckDate',
                    data: { date: selectedDate },
                    success: function (response) {
                        if (response.exists) {
                            $('#wrongDateMessage').addClass('d-none');
                            table.ajax.reload(null, false);
                        } else {
                            toastr.error('التاريخ غير موجود');
                            $('#wrongDateMessage').removeClass('d-none');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('حدث خطأ أثناء التحقق من التاريخ');
                        console.error('CheckDate Error:', xhr);
                    }
                });
            }
        });
    </script>
}