@model StockSystem2025.ViewModel.FormulasSettingViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var page = Model.Page;
    var pageSize = Model.PageSize;
    var totalRecords = Model.TotalRecords;
    var totalPages = (int)Math.Ceiling((double)totalRecords / pageSize);
}

<div class="page-wrapper">
    <div class="content">
        <div class="wordset">
            <p>مدة التنفيذ: @Model.Time.ToString(@"hh\:mm\:ss\.fff")</p>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive" dir="rtl">
                    <table class="table table-bordered table-hover text-center align-middle w-100">
                        <thead>
                            <tr>
                                <th>تسلسل</th>
                                <th>اسم الإستراتيجية</th>
                                <th>الترتيب</th>
                                <th>الفئة</th>
                                <th>ملاحظات</th>
                                <th>الشكل</th>
                                <th>الحالة</th>
                                <th>حذف/تعديل</th>
                                <th>عدد الشركات</th>
                                <th>عرض</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var orderedData = Model.Criteria
                                .OrderBy(c => c.Criteria.OrderNo == null ? int.MaxValue : c.Criteria.OrderNo)
                                .ThenBy(c => c.Criteria.Id == null ? int.MaxValue : c.Criteria.Id)
                                .ToList();
                            }
                            @if (Model.Criteria.Any())
                            {
                                @for (int i = 0; i < Model.Criteria.Count; i++)
                                {
                                    var item = orderedData[i];
                                    <tr>
                                        <td>@((page - 1) * pageSize + i + 1)</td>
                                        <td>@(item.Criteria.Name ?? "-")</td>
                                        <td>@(item.Criteria.OrderNo != null ? @item.Criteria.OrderNo:"بدون ترتيب")</td>
                                        <td>@(item.Criteria.Type ?? "-")</td>
                                        <td>@(item.Criteria.Note ?? "-")</td>
                                        <td>
                                            @if (@item.Criteria.ImageUrl != null)
                                            {
                                                <img src="~/assets/img/@item.Criteria.ImageUrl" style="width: 50px; height: 50px;" />
                                            }
                                           
                                        </td>
                                        <td>
                                            <span class="badges bg-lightgreen">@(item.Criteria.IsGeneral == true ? "عام " : "خاص")</span>
                                        </td>

                                        <td>
                                            <a class="me-3" asp-action="Edit" asp-controller="Criteria" asp-route-id="@item.Criteria.Id">
                                                <i class="fas fa-edit icon-size icon-edit"></i>
                                            </a>
                                            <a onclick="confirmDelete('@item.Criteria.Id', this)">
                                                <i class="fas fa-trash-alt icon-size icon-delete"></i>
                                            </a>
                                        </td>
                                        <td>@item.CompaniesCount</td>
                                        <td>
                                            <form asp-controller="Recommendations" asp-action="Result" method="post">
                                                <input type="hidden" value="@item.Criteria.Id" name="id" />
                                                <input type="hidden" value="1" name="viewIndex" />
                                                @if (item.CompaniesSticer != null)
                                                {
                                                    @foreach (var item in item.CompaniesSticer)
                                                    {
                                                        <input type="hidden" value="@item" name="CompaniesSticer" />

                                                    }
                                                }
                                                <button type="submit" class="btn btn-primary btn-sm">عرض</button>
                                            </form>
                                        </td>

                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8">لا توجد بيانات متاحة</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- ترقيم الصفحات -->
                @if (totalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center mt-3">
                            <li class="page-item @(page <= 1 ? "disabled" : "")">
                                <a class="page-link" href="/FormulasSetting/FormulasSettingIndex?page=@(page - 1)&pageSize=@pageSize" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == page ? "active" : "")">
                                    <a class="page-link" href="/FormulasSetting/FormulasSettingIndex?page=@i&pageSize=@pageSize">@i</a>
                                </li>
                            }
                            <li class="page-item @(page >= totalPages ? "disabled" : "")">
                                <a class="page-link" href="/FormulasSetting/FormulasSettingIndex?page=@(page + 1)&pageSize=@pageSize" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(id, element) {
            // Debug: Log the id to ensure it's valid
            console.log('Deleting criteria with id:', id);

            if (!id) {
                Swal.fire({
                    title: 'خطأ',
                    text: 'معرف الاستراتيجية غير صحيح.',
                    icon: 'error',
                    confirmButtonText: 'موافق',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            Swal.fire({
                title: 'هل أنت متأكد؟',
                text: 'سيتم حذف الاستراتيجية مع جميع المعادلات التابعة لها!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'نعم، احذفها!',
                cancelButtonText: 'إلغاء'
            }).then((result) => {
                if (result.isConfirmed) {
                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    if (!token) {
                        Swal.fire({
                            title: 'خطأ',
                            text: 'فشل في العثور على رمز التحقق.',
                            icon: 'error',
                            confirmButtonText: 'موافق',
                            confirmButtonColor: '#3085d6'
                        });
                        return;
                    }

                    fetch('/FormulasSetting/DeleteCriteria', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({ id: String(id) }) // Ensure id is a string
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'تم الحذف!',
                                text: 'تم حذف الاستراتيجية بنجاح.',
                                icon: 'success',
                                confirmButtonText: 'موافق',
                                confirmButtonColor: '#3085d6'
                            }).then(() => {
                                // Find the closest <tr>
                                const row = element.closest('tr');
                                if (row) {
                                    // Add fade-out animation
                                    row.style.transition = 'opacity 0.5s';
                                    row.style.opacity = '0';
                                    setTimeout(() => {
                                        row.remove();
                                        // Check if table is empty
                                        const tableBody = document.querySelector('tbody');
                                        if (tableBody && tableBody.children.length === 0) {
                                            tableBody.innerHTML = '<tr><td colspan="2" class="text-center">لا توجد استراتيجيات.</td></tr>';
                                        }
                                    }, 500);
                                } else {
                                    console.warn('Could not find parent <tr> to remove.');
                                    location.reload(); // Fallback to reload
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'خطأ',
                                text: data.message || 'حدث خطأ أثناء الحذف.',
                                icon: 'error',
                                confirmButtonText: 'موافق',
                                confirmButtonColor: '#3085d6'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error during deletion:', error);
                        Swal.fire({
                            title: 'خطأ',
                            text: 'فشل في الاتصال بالخادم.',
                            icon: 'error',
                            confirmButtonText: 'موافق',
                            confirmButtonColor: '#3085d6'
                        });
                    });
                }
            });
        }
    </script>

}