@* تأكد من تضمين Layout المناسب *@
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-wrapper">
    <div class="content">
        <div class="wordset">
            <ul>
                <li>
                    <a data-bs-toggle="tooltip" data-bs-placement="top" title="pdf">
                        <img src="~/assets/img/icons/pdf.svg" alt="img">
                    </a>
                </li>
                <li>
                    <a data-bs-toggle="tooltip" data-bs-placement="top" title="excel">
                        <img src="~/assets/img/icons/excel.svg" alt="img">
                    </a>
                </li>
                <li>
                    <a data-bs-toggle="tooltip" data-bs-placement="top" title="print">
                        <img src="~/assets/img/icons/printer.svg" alt="img">
                    </a>
                </li>
            </ul>
        </div>

        <div class="card">
            <div class="card-body">
               
                <div class="table-responsive" dir="rtl">
                    <table id="datanew" class="table  table-bordered table-hover text-center align-middle w-100">
                        <thead>
                            <tr>
                               
                                <th>م</th>
                                <th>اسم الإستراتيجية</th>
                                <th>الفئة</th>
                                <th>ملاحظات</th>
                                <th>الفاصل</th>
                                <th>حذف/تعديل</th>
                                <th>عدد الشركات</th>
                                <th>عرض</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- سيتم ملء الصفوف ديناميكيًا عبر AJAX -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
   

    <script>
        $(document).ready(function () {
            let page = 1;
            const pageSize = 10;
            let isLoading = false;
            let totalRecords = 0;
                const table = $('#datanew').DataTable({
            paging: false,        // ⛔ لا تقسيم لصفحات
            searching: true,     // اختياري: تعطيل البحث
            ordering: true,      // اختياري: تعطيل الترتيب
            info: false           // اختياري: إخفاء معلومات الجدول
        });

                    // تحميل البيانات تدريجيًا
            function loadData() {
                if (isLoading || (totalRecords > 0 && (page - 1) * pageSize >= totalRecords)) return;
                isLoading = true;
                $('#loading').show();

                $.ajax({
                    url: '/FormulasSetting/LoadData',
                    method: 'GET',
                    data: { page: page, pageSize: pageSize },
                    success: function (response) {
                        if (response.success) {
                            totalRecords = response.totalRecords;

                            // إضافة الصفوف إلى DataTable
                            response.data.forEach(function (item, index) {
                                table.row.add([
                                    
                                    (page - 1) * pageSize + index + 1, // رقم تسلسلي
                                    item.criteria.name || '-',
                                    item.criteria.type || '-',
                                    item.criteria.note || '-',
                                    `<span class="badges bg-lightgreen">${item.criteria.isIndicator === 1 ? 'Active' : 'Inactive'}</span>`,
                                    item.criteria.separater || '-',
                                    `<a class="me-3" href="/Strategies/Edit/${item.criteria.id}">
                                        <i class="fas fa-edit icon-size icon-edit"></i>
                                     </a>
                                     <a class="me-3 confirm-text" href="javascript:void(0);" onclick="confirmDelete(${item.criteria.id})">
                                        <i class="fas fa-trash-alt icon-size icon-delete"></i>
                                     </a>
                                     <a class="me-3" href="/Strategies/Details/${item.criteria.id}">
                                        <i class="fas fa-info-circle icon-size icon-info"></i>
                                     </a>`,
                                    item.companiesCount, // عدد الشركات الخاص بكل Criteria
                                    `<a href="/Strategies/View/${item.criteria.id}" class="btn btn-sm btn-primary">عرض</a>`
                                ]).draw(false);
                            });

                            // زيادة رقم الصفحة
                            page++;
                            isLoading = false;
                            $('#loading').hide();

                            // استمر في التحميل إذا كان هناك المزيد من البيانات
                            if (response.data.length === pageSize) {
                                setTimeout(loadData, 500); // تأخير بسيط
                            }
                        } else {
                            alert('خطأ: ' + response.message);
                            isLoading = false;
                            $('#loading').hide();
                        }
                    },
                    error: function () {
                        alert('حدث خطأ أثناء جلب البيانات');
                        isLoading = false;
                        $('#loading').hide();
                    }
                });
            }

           

            // بدء تحميل البيانات عند تحميل الصفحة
            loadData();

            // دالة تأكيد الحذف
            function confirmDelete(id) {
                if (confirm('هل أنت متأكد من حذف هذه الإستراتيجية؟')) {
                    $.ajax({
                        url: '/Strategies/Delete',
                        method: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                $('#datanew').DataTable().row($(`input[value="${id}"]`).closest('tr')).remove().draw();
                                alert('تم الحذف بنجاح');
                            } else {
                                alert('فشل الحذف');
                            }
                        },
                        error: function () {
                            alert('حدث خطأ أثناء الحذف');
                        }
                    });
                }
            }
        });
    </script>
}

<div id="loading" style="display: none; text-align: center; margin-top: 10px;">
    <img src="/images/loading.gif" width="32" height="32" alt="Loading" />
</div>

@* 

<div class="page-wrapper" dir="rtl">
    <div class="content">

        <table class="grid-table table table-bordered table-striped" id="criteriaTable">
            <thead>
                <tr>
                    <th class="mtd">م</th>
                    <th class="ttd">اسم الإستراتيجية</th>
                    <th class="ktd">الفئة</th>
                    <th class="nttd">ملاحظات</th>
                    <th>الفاصل</th>
                    <th>حذف/تعديل</th>
                    <th>عدد الشركات</th>
                    <th>عرض</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be populated via JavaScript/AJAX -->
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Load company data for dropdowns
            $.ajax({
                url: '/api/companies',
                method: 'GET',
                success: function (data) {
                    const companySelect = $('#companySelect');
                    const companyCodeSelect = $('#companyCodeSelect');
                    data.forEach(company => {
                        companySelect.append(`<option value="${company.companyCode}">${company.companyName}</option>`);
                        companyCodeSelect.append(`<option value="${company.companyCode}">${company.companyCode}</option>`);
                    });
                }
            });

            // Load general indicator grid
            function loadGeneralIndicatorGrid() {
                $('#loadingSpinner').show();
                $.ajax({
                    url: '/api/general-indicators',
                    method: 'GET',
                    success: function (data) {
                        const tbody = $('#generalIndicatorTable tbody');
                        tbody.empty();
                        data.forEach(item => {
                            tbody.append(`
                                <tr>
                                    <td><a href="/CompanyDetails?code=${item.sticker}">${item.sticker}</a></td>
                                    <td><a href="/CompanyDetails?code=${item.sticker}">${item.sname}</a></td>
                                    <td>${item.sopen.toFixed(2)}</td>
                                    <td>${item.shigh.toFixed(2)}</td>
                                    <td>${item.slow.toFixed(2)}</td>
                                    <td>${item.sclose.toFixed(2)}</td>
                                    <td dir="ltr">${formatChangeValue(item.changeValue)}</td>
                                    <td dir="ltr">${formatChangePercent(item.changeRate)}</td>
                                    <td>${item.svol}</td>
                                    <td dir="ltr">${item.indicatorIn.toFixed(2)}</td>
                                    <td dir="ltr">${item.indicatorOut.toFixed(2)}</td>
                                </tr>
                            `);
                        });
                        $('#loadingSpinner').hide();
                    }
                });
            }

            // Load criteria grid
            function loadCriteriaGrid() {
                $('#loadingSpinner').show();
                $.ajax({
                    url: '/api/criteria',
                    method: 'GET',
                    success: function (data) {
                        const tbody = $('#criteriaTable tbody');
                        tbody.empty();
                        data.forEach((item, index) => {
                            tbody.append(`
                                <tr>
                                    <td class="mtd"><a href="#" data-bs-toggle="modal" data-bs-target="#criteriaModal" data-id="${index + 1}" data-img="/images/${item.imageURL}" data-desc="${item.description}">${index + 1}</a></td>
                                    <td class="ttd"><a href="/CriteriaResult?id=${item.id}">${item.name}</a></td>
                                    <td class="ktd">${item.type}</td>
                                    <td class="nttd">${item.note}</td>
                                    <td><span>${item.separator}</span><img src="~//images/${item.imageURL}" width="15" height="15" alt="Separator" /></td>
                                    <td>
                                        <a href="#" class="delete-criteria" data-id="${item.id}">حذف</a> |
                                        <a href="/ManageCriteria?id=${item.id}">تعديل</a>
                                    </td>
                                    <td>${item.companyCount || '-'}</td>
                                    <td><a href="/RecommendationResult?id=${item.id}">عرض</a></td>
                                </tr>
                            `);
                        });
                        $('#loadingSpinner').hide();
                    }
                });
            }

            // Modal content population
            $('#criteriaModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                const imgSrc = button.data('img');
                const description = button.data('desc');
                const modal = $(this);
                modal.find('.modal-img').attr('src', imgSrc);
                modal.find('.modal-description').text(description);
            });

            // Search criteria
            $('#searchCriteriaBtn').click(function () {
                const separator = $('#separatorInput').val();
                const name = $('#criteriaNameInput').val();
                const type = $('#criteriaTypeInput').val();
                const notes = $('#criteriaNotesInput').val();
                // Implement search logic via AJAX
                console.log('Search:', { separator, name, type, notes });
            });

            // View company criteria
            $('#viewCompanyCriteriasBtn').click(function () {
                const companyCode = $('#companySelect').val();
                // Implement company criteria fetch via AJAX
                console.log('View company criteria:', companyCode);
            });

            // View all criteria
            $('#viewAllCriteriasBtn').click(function () {
                loadCriteriaGrid();
            });

            // Date navigation
            $('#nextDateBtn').click(function () {
                const dateInput = $('#criteriaStartDate');
                let date = new Date(dateInput.val());
                date.setDate(date.getDate() + 1);
                dateInput.val(date.toISOString().split('T')[0]);
                // Trigger data refresh
            });

            $('#prevDateBtn').click(function () {
                const dateInput = $('#criteriaStartDate');
                let date = new Date(dateInput.val());
                date.setDate(date.getDate() - 1);
                dateInput.val(date.toISOString().split('T')[0]);
                // Trigger data refresh
            });

            // Delete criteria
            $(document).on('click', '.delete-criteria', function (e) {
                e.preventDefault();
                const id = $(this).data('id');
                if (confirm('هل أنت متأكد من حذف هذه الإستراتيجية؟')) {
                    $.ajax({
                        url: `/api/criteria/${id}`,
                        method: 'DELETE',
                        success: function () {
                            loadCriteriaGrid();
                        }
                    });
                }
            });

            // Helper functions for formatting
            function formatChangeValue(value) {
                return value >= 0 ? `+${value.toFixed(2)}` : value.toFixed(2);
            }

            function formatChangePercent(value) {
                return value >= 0 ? `+${value.toFixed(2)}%` : `${value.toFixed(2)}%`;
            }

            // Initial load
            loadGeneralIndicatorGrid();
            loadCriteriaGrid();
        });
    </script>
} *@